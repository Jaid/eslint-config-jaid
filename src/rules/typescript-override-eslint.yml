# These are rules that also exist in eslint, but where TypeScript provides a more stable variant of
# https://typescript-eslint.io/rules/#extension-rules
prefix: '@typescript-eslint'
rules:
  dot-notation: WARN # https://typescript-eslint.io/rules/dot-notation
  no-array-constructor: WARN # https://typescript-eslint.io/rules/no-array-constructor
  no-dupe-class-members: WARN # https://typescript-eslint.io/rules/no-dupe-class-members
  no-redeclare: WARN # https://typescript-eslint.io/rules/no-redeclare
  no-restricted-imports: # https://typescript-eslint.io/rules/no-restricted-imports
    - WARN # https://eslint.org/docs/rules/no-restricted-imports
    - paths:
        - name: lodash
          message: Use lodash-es # https://www.npmjs.com/package/lodash-es
        - name: ensure-array
          message: Use sure-array # https://www.npmjs.com/package/sure-array
        - name: "@absolunet/fsp"
          message: Use fs-extra # https://www.npmjs.com/package/fs-extra
        - name: "@absolunet/fss"
          message: Use fs-extra # https://www.npmjs.com/package/fs-extra
        - name: opn
          message: Use open # https://www.npmjs.com/package/open
        - name: pify
          message: Use util.promisify # https://nodejs.org/dist/latest/docs/api/util.html#util_util_promisify_original
        - name: fs/promises
          message: Use fs-extra (more stable) # https://www.npmjs.com/package/fs-extra
        - name: node:fs/promises
          message: Use fs-extra (more stable) # https://www.npmjs.com/package/fs-extra
        - name: execall
          message: Use super-regex # https://www.npmjs.com/package/super-regex
  no-shadow: WARN # https://typescript-eslint.io/rules/no-shadow
  no-throw-literal: WARN # https://typescript-eslint.io/rules/no-throw-literal
  no-useless-constructor: WARN # https://typescript-eslint.io/rules/no-useless-constructor
  no-return-await: WARN # https://typescript-eslint.io/rules/no-return-await
